## Generic bash functions - simple functions for added FUNctionality.

# shellcheck shell=bash

## function: highlight
## - highlight text in a stream.
##   usage: highlight STRING
highlight() { 
    /usr/bin/grep --color -ie "$1" -e '^'; 
}

## function: extract 
## - extract many common archives.
##   usage: extract filename.xxx
extract() {
	if [ "$#" -ne 1 ]; then
		echo "Usage: extract filename.xxx"
		echo "    where xxx is one of many popular archival format file extensions."
	else
		if [ -f "$1" ] ; then
			case "$1" in
				*.tar.bz2) tar xjf "$1" ;;
				*.tar.gz) tar xzf "$1" ;;
				*.tar.Z) tar xzf "$1" ;;
				*.bz2) bunzip2 "$1" ;;
				*.rar) unrar x "$1" ;;
				*.gz) gunzip "$1" ;;
				*.jar) unzip "$1" ;;
				*.tar) tar xf "$1" ;;
				*.tbz2) tar xjf "$1" ;;
				*.tgz) tar xzf "$1" ;;
				*.zip) unzip "$1" ;;
				*.Z) uncompress "$1" ;;
				*) echo " ** '$1' cannot be extracted. **" ;;
			esac
		else
			echo " ** '$1' is not a file. **"
		fi
	fi
}

## function: itiof 
## - Is the Internet on fire? Check for the latest big security scapre.
##   usage: itiof
itiof() {
	RESPONSE=$(dig +short txt istheinternetonfire.com | sed -e 's/\\; /\n/' -e 's/"//'g  -e 's/"//'g -e 's/  / /g' -e 's/\n/ /g')
	# YELLOW='\033[1;33m'
	# RED='\033[0;31m'
	# NC='\033[0m'
	echo -e "${yellow}Is the Internet on fire yet?\n\n  ${red} $RESPONSE${noColour}\n"
}

## function: mdcat 
## - parse and display MarkDown files on the command line, in a man-like format.
##   usage: mdcat filename.md
mdcat() {
	if [ "$#" -ne 1 ]
	then 
		echo "Usage: mdcat filename.md"
	else 
		command -v pandoc >/dev/null 2>&1 || { echo " ** Pandoc is not installed. Cannot continue. Aborting. ** "; return 1; }
		pandoc -s -f markdown -t man "$@" | groff -T utf8 -man | less 
	fi
}

## function: pping 
## - coloured timestamped ping
##   usage: pping ip_address
pping () {
	ping "$@" |  perl -nle 'print "[97m[[94m", scalar(localtime), "[97m][0m ", $_'
}

## function: whatismyip
## - return external IP address from ipify.org.
##   usage: whatismyip
whatismyip() {
# TODO: JSON formatting.
	ipaddress=$(curl -s 'https://api.ipify.org')
	printf "${lcyan}External IP address: ${green}${ipaddress}${noColour}\n";	
}

## function: listfuncs 
## - list available custom functions.
##   usage: listfuncs
listfuncs() {
	functionpath="${HOME}/.dotfiles/functions"
	filelist="${functionpath}/functions.gen ${functionpath}/functions.${os} ${HOME}/.bash_profile_local"

	grep -h '^##' ${filelist} |
	while read line; do
		if ( echo "${line}" | grep -q '^## - ' ) ; then
			echo -e $(echo ${line} | sed -e 's/^## \(.*\)/\1/');
		elif ( echo "$line" | grep -q '^## function: ' ) ; then
			echo
			eval printf $(echo ${line} | sed -e 's/^## function: \(.*\)/${lcyan}\1${noColour}/');
			echo
		elif ( echo "$line" | grep -q '^##   usage:' ) ; then
            printf "  ${magenta}usage:${noColour} "
			echo -e $(echo ${line} | sed -e 's/^## usage: \(.*\)/\1/');
		elif ( echo "$line" | grep -q "^##          " ) ; then
			echo -e "        " $(echo ${line} | sed -e 's/^##//');
		elif ( echo "$line" | grep -q "^###" ) ; then
			printf ""
		else
			echo
			printf "${green}${line}${noColour}"
		fi
	done;
	echo ""
}

