#
# functions - simple functions for added FUNctionality.
#

# dgrep - simple function to grep for DHCP leases.
function dgrep () {
	if [ "$#" -ne 1 ]; then 
		echo "Usage: dgrep hostname"
		echo "    note that dgrep assumes /var/lib/dhcpd/dhcpd.leases"
	else
		if [ -f /var/lib/dhcpd/dhcpd.leases ]; then 
			grep -i -A 1 -B 8 $1 /var/lib/dhcpd/dhcpd.leases
		else 
			echo " ** /var/lib/dhcpd/dhcpd.leases does not exist. **"
		fi
	fi
}


# extract - extract many common archives.
extract() {
	if [ "$#" -ne 1 ]; then
		echo "Usage: extract filename.xxx"
		echo "    where xxx is one of many popular archival format file extensions."
	else
		if [ -f "$1" ] ; then
			case "$1" in
				*.tar.bz2) tar xjf "$1" ;;
				*.tar.gz) tar xzf "$1" ;;
				*.tar.Z) tar xzf "$1" ;;
				*.bz2) bunzip2 "$1" ;;
				*.rar) unrar x "$1" ;;
				*.gz) gunzip "$1" ;;
				*.jar) unzip "$1" ;;
				*.tar) tar xf "$1" ;;
				*.tbz2) tar xjf "$1" ;;
				*.tgz) tar xzf "$1" ;;
				*.zip) unzip "$1" ;;
				*.Z) uncompress "$1" ;;
				*) echo " ** '$1' cannot be extracted. **" ;;
			esac
		else
			echo " ** '$1' is not a file. **"
		fi
	fi
}

# itiof - Is the Internet on fire? Check for the latest big security scapre.
itiof() {
	RESPONSE=$(dig +short txt istheinternetonfire.com | sed -e 's/\\; /\n/' -e 's/"//'g  -e 's/"//'g -e 's/  / /g' -e 's/\n/ /g')
	YELLOW='\033[1;33m'
	RED='\033[0;31m'
	NC='\033[0m'
	echo -e "${YELLOW}Is the Internet on fire yet?\n\n  ${RED} $RESPONSE${NC}\n"
}

# mdcat - parse and display MarkDown files on the command line, in a man-like format.
mdcat() {
	if [ "$#" -ne 1 ]
	then 
		echo "Usage: mdcat filename.md"
	else 
		command -v pandoc >/dev/null 2>&1 || { echo " ** Pandoc is not installed. Cannot continue. Aborting. ** "; return 1; }
		pandoc -s -f markdown -t man $@ | groff -T utf8 -man | less 
	fi
}

# pping - coloured timestamped ping
pping () {
	ping $@ |  perl -nle 'print "[97m[[94m", scalar(localtime), "[97m][0m ", $_'
}
